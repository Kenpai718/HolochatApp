Index: app/src/main/java/edu/uw/tcss450/team5/holochat/ui/WeatherFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package edu.uw.tcss450.team5.holochat.ui;\r\n\r\nimport android.os.Bundle;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.TextView;\r\nimport android.widget.Toast;\r\n\r\nimport com.android.volley.Request;\r\nimport com.android.volley.RequestQueue;\r\nimport com.android.volley.Response;\r\nimport com.android.volley.VolleyError;\r\nimport com.android.volley.toolbox.StringRequest;\r\nimport com.android.volley.toolbox.Volley;\r\nimport com.google.android.material.tabs.TabLayoutMediator;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\nimport org.w3c.dom.Text;\r\n\r\nimport java.text.DateFormat;\r\nimport java.text.DecimalFormat;\r\nimport java.text.SimpleDateFormat;\r\nimport java.time.Instant;\r\nimport java.time.ZoneId;\r\nimport java.util.Date;\r\nimport java.util.TimeZone;\r\n\r\nimport edu.uw.tcss450.team5.holochat.R;\r\nimport edu.uw.tcss450.team5.holochat.ui.contacts.contact_tabs.ContactTabsAdapter;\r\n\r\n/**\r\n * A simple {@link Fragment} subclass.\r\n */\r\npublic class WeatherFragment extends Fragment {\r\n\r\n    //textbox where the user can enter the city\r\n    EditText etCity;\r\n    //button to refresh results\r\n    Button btnget;\r\n    //text result of the weather\r\n    TextView tvResult;\r\n\r\n    private String lon = \"\";\r\n    private String lat = \"\";\r\n\r\n    private String tempUrl = \"\";\r\n    private String tempUrl2 = \"\";\r\n    private String tempUrl3 = \"\";\r\n\r\n    private int requestCounter = 0;\r\n\r\n    //why two api calls?\r\n    //open-weather-api allows requests by city for current weather but not for one-call(returns hourly and daily forecast and more)\r\n    //first request returns longitude and latitude which can be used for the second call\r\n    //url for current weather api\r\n    private final String url = \"https://api.openweathermap.org/data/2.5/weather\";\r\n    //url for one-call weather api (returns forecasts)\r\n    private final String url2 = \"https://api.openweathermap.org/data/2.5/onecall\";\r\n    //api key linked to my account (masonh6)\r\n    private final String appid = \"5d35717e8f7700ac945b1abc468129d0\";\r\n    //hard coded request for tacoma washington\r\n    private final String url3 = \"https://api.openweathermap.org/data/2.5/onecall?lat=47.2529&lon=-122.4443&exclude=minutely,alerts&appid=\";\r\n\r\n    DecimalFormat df = new DecimalFormat(\"#.##\");\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        /*\r\n        View view = inflater.inflate(R.layout.fragment_weather, null, false);\r\n        TextView tvResult = (TextView) view.findViewById(R.id.tvResult);\r\n        return view;\r\n        */\r\n        return inflater.inflate(R.layout.fragment_weather, container, false);\r\n    }\r\n\r\n    @Override\r\n    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {\r\n        etCity = view.findViewById(R.id.etCity);\r\n        etCity.setText(\"Tacoma\");\r\n        btnget = view.findViewById(R.id.btnget);\r\n        btnget.setOnClickListener(this::getWeatherDetails);\r\n        tvResult = view.findViewById(R.id.tvResult);\r\n    }\r\n\r\n    public void getWeatherDetails(View view){\r\n\r\n\r\n\r\n        //get city from user input and construct first temp url\r\n        String city = etCity.getText().toString().trim();\r\n        if(city.equals(\"\")){\r\n            tvResult.setText(\"bro you forgot to enter the city\");\r\n        } else {\r\n            tempUrl = url + \"?q=\" + city + \"&appid=\" + appid;\r\n            System.out.println(tempUrl);\r\n            tempUrl3 = url3 + appid;\r\n        }\r\n\r\n\r\n\r\n        //first string request to get lon and lat\r\n        StringRequest stringRequest = new StringRequest(Request.Method.POST, tempUrl3, new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response) {\r\n                Log.d(\"response\", response);\r\n                String output = \"\";\r\n                try {\r\n\r\n                    JSONObject jsonResponse = new JSONObject(response);\r\n\r\n                    //grab current weather\r\n                    JSONObject jsonObjectMain = jsonResponse.getJSONObject(\"current\");\r\n                    //use for °C\r\n                    double temp = jsonObjectMain.getDouble(\"temp\") - 273.15;\r\n                    double feelsLike = jsonObjectMain.getDouble(\"feels_like\") - 273.15;\r\n                    //use for °F\r\n                    double tempF = 1.8 * (jsonObjectMain.getDouble(\"temp\") - 273.15) +32;\r\n                    double feelsLikeF = 1.8 * (jsonObjectMain.getDouble(\"feels_like\") - 273.15) +32;\r\n                    float pressure = jsonObjectMain.getInt(\"pressure\");\r\n                    int humidity = jsonObjectMain.getInt(\"humidity\");\r\n                    int wind_speed = jsonObjectMain.getInt(\"wind_speed\");\r\n                    int clouds = jsonObjectMain.getInt(\"clouds\");\r\n\r\n                    output += \"Current weather of \" + \"Tacoma\" + \" (\" + \"WA, USA\" + \") \"\r\n                            + \"\\n Temp: \" + df.format(tempF) + \" °F\"\r\n                            + \"\\n Feels Like: \" + df.format(feelsLikeF) + \" °F\"\r\n                            + \"\\n Humidity: \" + humidity + \"%\"\r\n                            //+ \"\\n Description: \" + description\r\n                            + \"\\n Wind Speed: \" + wind_speed + \"m/s (meters per second)\"\r\n                            + \"\\n Cloudiness: \" + clouds + \"%\"\r\n                            + \"\\n Pressure: \" + pressure + \" hPa\" + \"\\n\\n\";\r\n\r\n                    //grab hourly forcast\r\n                    output += \"24 Hour Forcast: \\n\";\r\n\r\n                    JSONArray hourlyArray = jsonResponse.getJSONArray(\"hourly\");\r\n\r\n                    for (int i = 1; i <=24; i++){\r\n                        JSONObject curHourIndex = hourlyArray.getJSONObject(i);\r\n                        //long curHour = (long) curHourIndex.getDouble(\"dt\");\r\n                        String curHourString = curHourIndex.getString(\"dt\");\r\n                        Date date = new Date(Long.parseLong(curHourString) * 1000);\r\n                        DateFormat format = new SimpleDateFormat(\"ha\");\r\n                        format.setTimeZone(TimeZone.getTimeZone(\"America/Los_Angeles\"));\r\n                        String formattedDate = format.format(date);\r\n                        //System.out.println(formattedDate);\r\n\r\n\r\n                        double curTemp = curHourIndex.getDouble(\"temp\");\r\n                        double curTempF = 1.8 * (curHourIndex.getDouble(\"temp\") - 273.15) +32;\r\n                        JSONArray curHourWeatherArray = curHourIndex.getJSONArray(\"weather\");\r\n                        JSONObject curHourWeatherArrayIndex = curHourWeatherArray.getJSONObject(0);\r\n                        String curHourWeatherDescription = curHourWeatherArrayIndex.getString(\"description\");\r\n                        if (i % 2 == 0){\r\n                            output += formattedDate + \" \" + df.format(curTempF) + \"°F, \" + curHourWeatherDescription + \"\\n\";\r\n                        } else {\r\n                            output += formattedDate + \" \" + df.format(curTempF) + \"°F, \" + curHourWeatherDescription + \" - \";\r\n                        }\r\n                    }\r\n\r\n                    //grab daily forecast\r\n                    output += \"\\n5 Day Forecast\\n\";\r\n\r\n                    JSONArray dailyArray = jsonResponse.getJSONArray(\"daily\");\r\n                    for(int i = 1; i <= 5; i++){\r\n                        JSONObject curDayIndex = dailyArray.getJSONObject(i);\r\n                        String curDayString = curDayIndex.getString(\"dt\");\r\n                        Date date = new Date(Long.parseLong(curDayString) * 1000);\r\n                        DateFormat format = new SimpleDateFormat(\"EEEE\");\r\n                        String formattedDay = format.format(date);\r\n\r\n                        JSONObject tempOb = curDayIndex.getJSONObject(\"temp\");\r\n                        double dayTempF = 1.8 * (tempOb.getDouble(\"day\") - 273.15) + 32;\r\n\r\n                        JSONArray dailyWeatherArray = curDayIndex.getJSONArray(\"weather\");\r\n                        JSONObject dailyWeatherArrayIndex = dailyWeatherArray.getJSONObject(0);\r\n                        String dayDescription = dailyWeatherArrayIndex.getString(\"description\");\r\n\r\n                        output += formattedDay + \" \" + df.format(dayTempF) + \"°F, \" + dayDescription + \"\\n\";\r\n\r\n                    }\r\n                    //print to textview\r\n                    tvResult.setText(output);\r\n\r\n                } catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        }, new Response.ErrorListener(){\r\n                @Override\r\n                public void onErrorResponse(VolleyError error){\r\n                    Toast.makeText(getActivity(), error.toString().trim(), Toast.LENGTH_SHORT).show();\r\n                    System.out.println(\"First request is failing\");\r\n                }\r\n        });\r\n\r\n\r\n\r\n\r\n        //request queue\r\n        RequestQueue requestQueue = Volley.newRequestQueue(getActivity());\r\n\r\n        //add the first request to the first queue\r\n        requestQueue.add(stringRequest);\r\n    }\r\n\r\n    /**\r\n     * part of my attempt to send two requests\r\n     */\r\n    public void secondRequestHelper(){\r\n        StringRequest stringRequest2 = new StringRequest(Request.Method.POST, tempUrl2, new Response.Listener<String>() {\r\n            @Override\r\n            public void onResponse(String response) {\r\n                //Log.d(\"response\", response);\r\n                String output = \"\";\r\n                try {\r\n                    JSONObject jsonResponse = new JSONObject(response);\r\n                    //was once jsonArray\r\n                    //JSONArray jsonArray = jsonResponse.getJSONArray(\"weather\");\r\n                    //JSONObject jsonObjectWeather = jsonArray.getJSONObject(0);\r\n                    //String description = jsonObjectWeather.getString(\"description\");\r\n                    JSONArray jsonArrayCurrent = jsonResponse.getJSONArray(\"current\");\r\n\r\n\r\n                    JSONObject jsonObjectMain = jsonResponse.getJSONObject(\"current\");\r\n                    //use for °C\r\n                    double temp = jsonObjectMain.getDouble(\"temp\") - 273.15;\r\n                    double feelsLike = jsonObjectMain.getDouble(\"feels_like\") - 273.15;\r\n                    //use for °F\r\n                    double tempF = 1.8 * (jsonObjectMain.getDouble(\"temp\") - 273.15) +32;\r\n                    double feelsLikeF = 1.8 * (jsonObjectMain.getDouble(\"feels_like\") - 273.15) +32;\r\n                    float pressure = jsonObjectMain.getInt(\"pressure\");\r\n                    int humidity = jsonObjectMain.getInt(\"humidity\");\r\n                    JSONObject jsonObjectWind = jsonResponse.getJSONObject(\"wind\");\r\n                    String wind = jsonObjectWind.getString(\"speed\");\r\n                    JSONObject jsonObjectClouds = jsonResponse.getJSONObject(\"clouds\");\r\n                    String clouds = jsonObjectClouds.getString(\"all\");\r\n                    JSONObject jsonObjectSys = jsonResponse.getJSONObject(\"sys\");\r\n                    String countryName = jsonObjectSys.getString(\"country\");\r\n                    String cityName = jsonResponse.getString(\"name\");\r\n                    System.out.println(\"lhjdfksakjlhfsdlhjkf\");\r\n                    output += \"Current weather of \" + cityName + \" (\" + countryName + \") \" + \"lon:\" + lon + \" lat:\" + lat\r\n                            + \"\\n Temp: \" + df.format(tempF) + \" °F\"\r\n                            + \"\\n Feels Like: \" + df.format(feelsLikeF) + \" °F\"\r\n                            + \"\\n Humidity: \" + humidity + \"%\"\r\n                            //+ \"\\n Description: \" + description\r\n                            + \"\\n Wind Speed: \" + wind + \"m/s (meters per second)\"\r\n                            + \"\\n Cloudiness: \" + clouds + \"%\"\r\n                            + \"\\n Pressure: \" + pressure + \" hPa\";\r\n                    tvResult.setText(\"testing\");\r\n                } catch (JSONException e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        }, new Response.ErrorListener(){\r\n            @Override\r\n            public void onErrorResponse(VolleyError error){\r\n                Toast.makeText(getActivity(), error.toString().trim(), Toast.LENGTH_SHORT).show();\r\n                System.out.println(\"second request is failing\");\r\n            }\r\n        });\r\n\r\n        RequestQueue rq = Volley.newRequestQueue(getActivity());\r\n        rq.add(stringRequest2);\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/edu/uw/tcss450/team5/holochat/ui/WeatherFragment.java b/app/src/main/java/edu/uw/tcss450/team5/holochat/ui/WeatherFragment.java
--- a/app/src/main/java/edu/uw/tcss450/team5/holochat/ui/WeatherFragment.java	
+++ b/app/src/main/java/edu/uw/tcss450/team5/holochat/ui/WeatherFragment.java	
@@ -94,10 +94,12 @@
         tvResult = view.findViewById(R.id.tvResult);
     }
 
+
+    /**
+     * sends json request and parses data for current, hourly, and daily forecasts
+     * @param view
+     */
     public void getWeatherDetails(View view){
-
-
-
         //get city from user input and construct first temp url
         String city = etCity.getText().toString().trim();
         if(city.equals("")){
@@ -108,9 +110,6 @@
             tempUrl3 = url3 + appid;
         }
 
-
-
-        //first string request to get lon and lat
         StringRequest stringRequest = new StringRequest(Request.Method.POST, tempUrl3, new Response.Listener<String>() {
             @Override
             public void onResponse(String response) {
@@ -155,8 +154,6 @@
                         DateFormat format = new SimpleDateFormat("ha");
                         format.setTimeZone(TimeZone.getTimeZone("America/Los_Angeles"));
                         String formattedDate = format.format(date);
-                        //System.out.println(formattedDate);
-
 
                         double curTemp = curHourIndex.getDouble("temp");
                         double curTempF = 1.8 * (curHourIndex.getDouble("temp") - 273.15) +32;
@@ -217,7 +214,7 @@
     }
 
     /**
-     * part of my attempt to send two requests
+     * part of my attempt to send two requests (currently unused)
      */
     public void secondRequestHelper(){
         StringRequest stringRequest2 = new StringRequest(Request.Method.POST, tempUrl2, new Response.Listener<String>() {
